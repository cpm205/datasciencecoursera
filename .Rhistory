df <- do.call("rbind", dataList)
df
test <- complete.cases(df)
test
newdf[complete.cases(df),]
newdf <- df[complete.cases(df),]
newdf
newdf
newdf
nrow(newdf)
newdf
rowsum(newdf)
rowsum(newdf,"id")
rowsum(newdf,id)
testdf <- data.frame(A = c(1, 1, 2, 3, 3), B = c(2, 3, 3, 5, 6))
testdf
testdf <- group_by()
df
warning()
df
testdf <- df[1,2]
testdf
testdf <- df[1,1]
testdf
testdf <- df[,1]
testdf
testdf <- df[complete.cases(df),]
testdf
nrow(newdf)
nrow(df)
df[complete.cases(df),]
nrow(df[complete.cases(df),])
df
newdf
nrow(newdf)
count(newdf, " ID")
library(plyr)
install.packages("plyr")
library(plyr)
count(newdf, " ID")
count(newdf, "ID")
filePath <- paste(getwd(),directory,sep = "/")
filePath <- paste(getwd(),"specdata",sep = "/")
id <- 3
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
fileNameList
dataList <- lapply(fileNameList, read.csv)
df <- do.call("rbind", dataList)
newdf <- df[complete.cases(df),]
newdf
nrow(nedf)
nrow(newdf)
count(newdf, "ID")
id <- 30:25
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
fileNameList
dataList <- lapply(fileNameList, read.csv)
df <- do.call("rbind", dataList)
newdf <- df[complete.cases(df),]
newdf
count(newdf, "ID")
submit()
source(submitscript1)
getwd()
source("submitscript1")
source("submitscript1.r")
submit()
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
dataList <- lapply(fileNameList, read.csv)
df <- do.call("rbind", dataList)
newdf <- df[complete.cases(df),]
count(newdf, "ID")
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 3)
complete("specdata", 30:25)
newdf
testdf <- data.frame(aname="ID", bname="nobs")[numeric(0), ]
testdf
testdf <- data.frame("id"=numeric(),"nobs"=numeric())
testdf
count(newdf,"id")
count(newdf, "ID")
testdf
groupdf <- count(newdf, "ID")
groupdf
testdf
rbind.fill(testdf groupdf)
do.call("rbind", groupdf)
do.call("cbind", groupdf)
groupdf
library(data.table)
install.packages("data.table")
library(data.table)
testdf
rbindlist(list(testdf, groupdf)
groupdf
groupdfy
groupdf
testdf
groupdf
colnames(groupdf) <- c("freq", "nobs")
groupdf
colnames(groupdf) <- c("ID", "nobs")
groupdf
count(newdf, "ID")
colnames(groupdf) <- c("ID", "nobs")
groupdf
submit()
6
7
submit()
submit()
submit()
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
dataList <- lapply(fileNameList, read.csv)
df <- do.call("rbind", dataList)
newdf <- df[complete.cases(df),]
groupdf <- count(newdf, "ID")
colnames(groupdf) <- c("id", "nobs")
groupdf
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 3)
complete("specdata", 30:25)
df <- complete("specdata", 30:25)
df
df
df[order(df$id),]
df[order(df$id,-cyl),]
df[order(id,-cyl),]
df[order(id),]
df
df[order(id),]
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
dataList <- lapply(fileNameList, read.csv)
df <- do.call("rbind", dataList)
newdf <- df[complete.cases(df),]
groupdf <- count(newdf, "ID")
colnames(groupdf) <- c("id", "nobs")
groupdf[order(id),]
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 30:25)
submit()
complete("specdata", 30:25)
df[order(id),]
df[order(id),]
df
df
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
dataList <- lapply(fileNameList, read.csv)
df <- do.call("rbind", dataList)
newdf <- df[complete.cases(df),]
groupdf <- count(newdf, "ID")
groupdf<- groupdf[order(id),]
colnames(groupdf) <- c("id", "nobs")
groupdf
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
df[order(id),]
submit()
complete("specdata", 30:25)
complete("specdata", 30:25)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
dataList <- lapply(fileNameList, read.csv)
df <- do.call("rbind", dataList)
newdf <- df[complete.cases(df),]
groupdf <- count(newdf, "ID")
groupdf<- groupdf[order(id),]
colnames(groupdf) <- c("id", "nobs")
groupdf
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
newdf
newdf[newdf$nobs > 0, ]
source("complete.r")
complete("specdata")
d
df <- complete("specdata")
df
View(df)
df <- complete("specdata")
df
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
corrsNum <- numeric(0)
source("complete.r")
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", cid), ".csv", sep="")
rawDfr <- read.csv(fileNameList)
nobsNum <- c(nobsNum, nrow(na.omit(rawDfr)))
}
data.frame(id = id, nobs = nobsNum)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
corrsNum <- numeric(0)
source("complete.r")
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", cid), ".csv", sep="")
rawDfr <- read.csv(fileNameList)
corrsNum <- c(corrsNum, cor(rawDfr$sulfate, rawDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
}
cr <- corr("specdata", 150)
head(cr)
submit()
submit()
submit()
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
##Method 1
##filePath <- paste(getwd(),directory,sep = "/")
##fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
##dataList <- lapply(fileNameList, read.csv)
##df <- do.call("rbind", dataList)
##newdf <- df[complete.cases(df),]
##groupdf <- count(newdf, "ID")
##colnames(groupdf) <- c("id", "nobs")
##groupdf
##Method 2
nobsNum <- numeric(0)
for (cid in id) {
# --- Assert get data frame as ID
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
cDfr <- read.csv(fileNameList)
# --- Assert count the number of complete cases and append to numeric
# vector
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
# --- Assert return value is a data frame with TWO (2) columns
data.frame(id = id, nobs = nobsNum)
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 30:25)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
##Method 1
##filePath <- paste(getwd(),directory,sep = "/")
##fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
##dataList <- lapply(fileNameList, read.csv)
##df <- do.call("rbind", dataList)
##newdf <- df[complete.cases(df),]
##groupdf <- count(newdf, "ID")
##colnames(groupdf) <- c("id", "nobs")
##groupdf
##Method 2
nobsNum <- numeric(0)
for (cid in id) {
# --- Assert get data frame as ID
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
cDfr <- read.csv(fileNameList)
# --- Assert count the number of complete cases and append to numeric
# vector
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
# --- Assert return value is a data frame with TWO (2) columns
data.frame(id = id, nobs = nobsNum)
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 30:25)
complete("specdata", 30:25)
complete("specdata", 30:25)
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
cDfr <- read.csv(fileNameList)
filePath <- paste(getwd(),directory,sep = "/")
filePath <- paste(getwd(),"specdata",sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
cDfr <- read.csv(fileNameList)
fileNameList
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
##Method 1
##filePath <- paste(getwd(),directory,sep = "/")
##fileNameList <- paste(filePath, "/", sprintf("%03d", id), ".csv", sep="")
##dataList <- lapply(fileNameList, read.csv)
##df <- do.call("rbind", dataList)
##newdf <- df[complete.cases(df),]
##groupdf <- count(newdf, "ID")
##colnames(groupdf) <- c("id", "nobs")
##groupdf
##Method 2
nobsNum <- numeric(0)
for (cid in id) {
# --- Assert get data frame as ID
filePath <- paste(getwd(),directory,sep = "/")
fileNameList <- paste(filePath, "/", sprintf("%03d", cid), ".csv", sep="")
cDfr <- read.csv(fileNameList)
# --- Assert count the number of complete cases and append to numeric
# vector
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
# --- Assert return value is a data frame with TWO (2) columns
data.frame(id = id, nobs = nobsNum)
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
complete("specdata", 30:25)
submit()
install.packages("swirl")
library("swirl")
swirl()
swirl()
?InstallCourses
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
1
0
swirl()
setwd()
dir()
getwd()
x <- as.Date("1970-01-01")
x
unclass(x)
x
x <- Sys.time()
x
x <- list(a = 1:5, b = rnorm(10))
lapply(x,mean)
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x,mean)
x <- list(1:5)
x
x <- list(a=1:5,b=1:6)
x
x <- list(a = 1:5, b = rnorm(10))
lapply(x,mean)
x <- list(a = 1:5, b = rnorm(10))
lapply(x,mean)
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x,mean)
y <- 1:4
y
lapply(y, runif) ##Run runif function against the list y
z <- 1:4
z
lapply(z, runif,min=0, max = 10)##Run runif function against the list z with params - min and max that function runif needs
##using anonymous function
lst <- list(a = matrix(1:4,2,2), b = matrix(1:6,3,2))
lst
lapply(lst, function(elt) elt[,1])
x <- list(a = 1:4)
lapply(x, mean)
x <- list(a = 1:4, b = 2:5)
lapply(x, mean)
x <- list(a = 1:4, b = 2:5)
lapply(x, mean)
sapply(x, mean)
x <- list(a = 1:4, b = 2:5)
lapply(x, mean)
sapply(x, mean)
mean(x)
library(datasets)
data(iris)
x <- data(iris)
x
?iris
x <- ?iris
x
View(iris)
View(iris)
x < -iris
x
x <- iris
x
x[,"virginica"]
x[x$Species == "virginica"]
x
x[x$Species == "virginica"]
x[x$Species == "virginica",]
y <- x[x$Species == "virginica",]
mean(y[,1])
y[,1]
lapply(y[,1],mean)
sapply(y[,1],mean)
apply(y[,1],mean)
apply(y[,1],mean)
lst < list(y[,1])
lst <- list(y[,1])
lst
lapply(lst,mean)
sapply(lst,mean)
colMeans(iris)
y
colMeans(y)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
rowMeans(iris[, 1:4])
